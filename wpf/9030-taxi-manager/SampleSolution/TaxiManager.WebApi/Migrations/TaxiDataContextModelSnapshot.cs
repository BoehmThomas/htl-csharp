// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TaxiManager.WebApi.Data;

namespace TaxiManager.WebApi.Migrations
{
    [DbContext(typeof(TaxiDataContext))]
    partial class TaxiDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaxiManager.Shared.Driver", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("TaxiManager.Shared.Taxi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LicensePlate")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Taxis");
                });

            modelBuilder.Entity("TaxiManager.Shared.TaxiRide", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("Charge");

                    b.Property<int?>("DriverID")
                        .IsRequired();

                    b.Property<DateTime?>("End");

                    b.Property<DateTime>("Start");

                    b.Property<int?>("TaxiID")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("DriverID");

                    b.HasIndex("TaxiID");

                    b.ToTable("Rides");
                });

            modelBuilder.Entity("TaxiManager.Shared.TaxiRide", b =>
                {
                    b.HasOne("TaxiManager.Shared.Driver", "Driver")
                        .WithMany("Rides")
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaxiManager.Shared.Taxi", "Taxi")
                        .WithMany("Rides")
                        .HasForeignKey("TaxiID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
